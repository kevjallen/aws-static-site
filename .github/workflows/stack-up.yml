name: Apply stack

on:
  workflow_call:

    inputs:
      environment:
        required: true
        type: string
      version:
        required: false
        type: string
      context:
        required: false
        type: string

    secrets:
      awsAccountId:
        required: true
      awsRegion:
        required: true
      awsAccessKeyId:
        required: true
      awsSecretAccessKey:
        required: true

jobs:
  deploy:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup asdf
      uses: asdf-vm/actions/setup@v1

    - name: Install nodejs
      run: |
        asdf plugin add nodejs && asdf install nodejs

    - name: Install jq
      run: |
        asdf plugin add jq && asdf install jq

    - name: Get artifact defaults
      id: defaults
      run: |
        source _internals/defaults.sh
        echo "::set-output name=artifact_name::$(basename "$ARTIFACT_PATH" .zip)"
        echo "::set-output name=artifact_dirname::$(dirname "$ARTIFACT_PATH")"
        echo "::set-output name=artifact_basename::$(basename "$ARTIFACT_PATH")"

    - name: Download release candidate
      if: ${{ !inputs.version }}
      uses: actions/download-artifact@v2
      with:
        name: ${{ steps.defaults.outputs.artifact_name }}
        path: ${{ steps.defaults.outputs.artifact_dirname }}

    - name: Download official release
      if: ${{ inputs.version }}
      run: |
        _internals/shell-functions/download-release.sh \
          '${{ github.repository }}' '${{ inputs.version }}' \
          '${{ steps.defaults.outputs.artifact_basename }}'

    - name: Read CDK context
      id: cdk_context
      run: |
        CDK_CONTEXT_ARGS=$(_internals/shell-functions/context-args-from.sh \
          ${{ inputs.context }})
        echo "::set-output name=cdk_context_args::$CDK_CONTEXT_ARGS"

    - name: Synth environment
      id: cdk_synth
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.awsSecretAccessKey }}
      run: |
        TEMPLATE=$(_internals/shell-functions/npm-run-cdk.sh 'synth' \
          '${{ secrets.awsAccountId }}' '${{ secrets.awsRegion }}' \
          ${{ steps.cdk_context.outputs.cdk_context_args }}
        )
        echo "::set-output name=template::$(echo "$TEMPLATE")"

    - name: Deploy environment
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.awsSecretAccessKey }}
      run: |
        _internals/shell-functions/npm-run-cdk.sh 'deploy' \
          '${{ secrets.awsAccountId }}' '${{ secrets.awsRegion }}' \
          ${{ steps.cdk_context.outputs.cdk_context_args }}

    - name: Run E2E tests
      run: |
        _internals/shell-functions/run-e2e-tests-on.sh \
          '${{ steps.cdk_synth.outputs.template }}'
