name: Release

on:
  pull_request:
    types: [opened, synchronize, reopened]

  push:
    branches: [master]

  workflow_dispatch:
    inputs:
      version:
        type: string

jobs:
  setup:
    if: >-
      !github.event.inputs.version &&
      !github.event.pull_request
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_lookup.outputs.version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Lookup current version
      id: version_lookup
      run: |
        VERSION=$(git tag --points-at)
        echo "::set-output name=version::$VERSION"
        echo "$VERSION"

  build:
    needs: [setup]
    if: >-
      !failure() &&
      !github.event.inputs.version &&
      !needs.setup.outputs.version
    runs-on: ubuntu-latest
    outputs:
      artifactName: ${{ steps.artifact.outputs.artifact_name }}
      publishFolder: ${{ steps.artifact.outputs.publish_folder }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup ruby
      uses: ruby/setup-ruby@v1

    - name: Create artifact
      id: artifact
      run: |
        source _internals/shell-functions/create-artifact.sh
        echo "::set-output name=artifact_name::$(basename "$ARTIFACT_PATH" .zip)"
        echo "::set-output name=publish_folder::$(dirname "$ARTIFACT_PATH")"

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.artifact.outputs.artifact_name }}
        path: ${{ steps.artifact.outputs.publish_folder }}

  integration:
    needs: [setup, build]
    if: >-
      !failure() &&
      !github.event.inputs.version &&
      !needs.setup.outputs.version
    uses: ./.github/workflows/stack-up.yml
    with:
      environment: Integration
      contextFiles: >-
        _internals/site-contexts/_common.json
        _internals/site-contexts/env-integration.json
      cdkArguments: >-
        -c stackName=StaticSite-Integration-${{ github.sha }}
        -c subdomain=${{ github.sha }}
    secrets:
      awsAccountId: ${{ secrets.AWS_ACCOUNT_ID }}
      awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
      awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      awsRegion: ${{ secrets.AWS_DEFAULT_REGION }}   

  post_integration:
    needs: [setup, build, integration]
    if: >-
      always()
    uses: ./.github/workflows/stack-down.yml
    with: 
      environment: Integration
      contextFiles: >-
        _internals/site-contexts/_common.json
        _internals/site-contexts/env-integration.json
      cdkArguments: >-
        -c stackName=StaticSite-Integration-${{ github.sha }}
        -c subdomain=${{ github.sha }}
    secrets:
      awsAccountId: ${{ secrets.AWS_ACCOUNT_ID }}
      awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
      awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      awsRegion: ${{ secrets.AWS_DEFAULT_REGION }}          

  release:
    needs: [setup, build, integration]
    if: >-
      !failure() &&
      !github.event.inputs.version &&
      !needs.setup.outputs.version &&
      !github.event.pull_request
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }} 

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download release candidate
      uses: actions/download-artifact@v2
      with:
        name: ${{ needs.build.outputs.artifactName }}
        path: ${{ needs.build.outputs.publishFolder }}

    - name: Create official release
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npx semantic-release
        VERSION=$(git tag --points-at)
        echo "::set-output name=version::$VERSION"

  preview:
    needs: [setup, build, integration, release]
    if: >-
      !failure() && (
        github.event.inputs.version ||
        needs.setup.outputs.version ||
        needs.release.outputs.version
      )
    uses: ./.github/workflows/stack-up.yml
    with:
      version: >-
        ${{
          github.event.inputs.version ||
          needs.setup.outputs.version ||
          needs.release.outputs.version
        }}
      environment: Preview
      contextFiles: >-
        _internals/site-contexts/_common.json
        _internals/site-contexts/env-preview.json
    secrets:
      awsAccountId: ${{ secrets.AWS_ACCOUNT_ID }}
      awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
      awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      awsRegion: ${{ secrets.AWS_DEFAULT_REGION }}

  production:
    needs: [setup, build, integration, release, preview]
    if: >-
      !failure() && (
        github.event.inputs.version ||
        needs.setup.outputs.version ||
        needs.release.outputs.version
      )
    uses: ./.github/workflows/stack-up.yml
    with:
      version: >-
        ${{
          github.event.inputs.version ||
          needs.setup.outputs.version ||
          needs.release.outputs.version
        }}
      environment: Production
      contextFiles: >-
        _internals/site-contexts/_common.json
        _internals/site-contexts/env-production.json
    secrets:
      awsAccountId: ${{ secrets.AWS_ACCOUNT_ID }}
      awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
      awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      awsRegion: ${{ secrets.AWS_DEFAULT_REGION }}
